// @ts-ignore
import domTestingLibraryCode from "./dom-testling-library.code.js";
import MagicString from "magic-string";
import path from "path";

/**
 * @param {string} code
 */
function isTransformed(code) {
    return (/generated by Svelte/).test(code);
}

/**
 * @param {import("./types").PluginOptions & { _debug: boolean }} options
 * @returns {import("vite").Plugin}
 */
export function sveltekitPluginDtl(options = {}) {
    const { _debug } = options;
    const testDirs = options?.files?.tests || ["test", "tests"];
    return {
        name: "sveltekit-plugin-test",
        apply: "serve",
        config() {
			return {
				server: {
					fs: {
						allow: testDirs
                            .map((dir) => path.resolve(process.cwd(), dir)),
					},
				},
                optimizeDeps: {
                    exclude: ["sitgent", "sitgent/*"],
                },
			};
		},
        async transform(code, id) {
            if (!id.endsWith(".svelte") || !isTransformed(code)) return;
            if (id.endsWith("generated/root.svelte")) {
                const magicString = new MagicString(code);
                const debugString = _debug
                    ? "console.log(\"DOM Testing Library loaded...\");\n"
                    : "";
                magicString.append(`\n;${debugString}${domTestingLibraryCode}`);
                return {
                    code: magicString.toString(),
                    map: magicString.generateMap(),
                };
            }
        },
    };
}
